package com.spring.basic.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
@RequestMapping("/response")
public class ResponseController {
	
	@GetMapping("/res-ex01")
	public void resex01(){
		
	}
	
	/*
	 * 1. model 객체를 사용하여 응답할 화면에 데이터를 전송하기.
	 * 스프링에서 제공하는 Model 타입의 객체를 활용하여 Jsp 파일과 같은 View 템플릿으로	
	 * 데이터를 전송할 수 있습니다.
	 * Model 객체는 기본적으로 Request 객체의 attribute로 설정되어 전송되므로
	 * 기존에 쓰던 foward 방식의 응답과 유사함
	 */
	
//	@GetMapping("/test")
//	public void test(@RequestParam("age") int age , Model model) { // 변수명이 동일하니까 int age만 써도 됨
//		model.addAttribute("age",age);
//		model.addAttribute("nick","멍멍이");
//	}
	
	/*
	 * 2. @modelAttribute를 사용한 화면에 데이터 전송 처리
	 * @RequestParam + model.addAttribute 처럼 동작함
	 */
	
	@GetMapping("/test")
	public void test(@ModelAttribute("age") int age , Model model) {
//		model.addAttribute("age",age); 위에서 했던거처럼 할 필요 X
		model.addAttribute("nick","짹짹이"); // 이건 매개값에서 받은적이 없기에 설정해줘야함
		
		
	}
}
