package com.spring.basic.board.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.spring.basic.board.service.BoardService;

import lombok.RequiredArgsConstructor;

@Controller
@RequestMapping("/board")
@RequiredArgsConstructor
public class BoardController {

	private final BoardService service;
	
	//글 작성 화면을 열어주는 메서드
	@GetMapping("/write")
	public void write() {
		System.out.println("/board/write: GET");
	}
	
	//글 등록 요청 메서드
	@PostMapping("/write") //form에서 action을 안써서 이렇게 사용 가능
	public String write(String writer, String title, String content){
		System.out.println("/board/write: POST");
		service.insertArticle(writer,title,content);
		return "redirect:/board/list"; //새로고침 해줘야함 redirect로 
	}
	
	//글 목록 화면 요청
	@GetMapping("/list")
	public void list(Model model) {
		System.out.println("/board/list: GET");
		model.addAttribute("articles", service.getArticles());
	}
	
	//글 내용 상세보기
	@GetMapping("/content")
	public void content(int boardNo, Model model) {
		System.out.println("/board/content?boardNo= " + boardNo);
		retrieve(boardNo, model);
		
	}
	
	// 글 수정하기 화면으로 이동 요청
    // 메서드 이름은 modify(), url: /board/modify -> GET
    // 수정하고자 하는 글 정보를 모두 받아와서 modify.jsp로 보내 주세요.
    @GetMapping("/modify")
    public void modify(int boardNo, Model model) {
    	System.out.println("/board/modify?boardNo= " + boardNo);
    	retrieve(boardNo,model);
    }
    
    @PostMapping("/modify")
    public String modify(int boardNo, String writer, String title, String content) {
    	System.out.println("/board/modify: POST");
		service.updateArticle(writer,title,content);
		return "redirect:/board/content?boardNo"; //새로고침 해줘야함 redirect로
    }
    
    //modify.jsp를 생성해서, form태그에 사용자가 처음에 작성했던 내용이 드러나도록
    //배치해 주시고 수정을 받아 주세요.
    //수정 처리하는 메서드: modify(), 요청 url: /board/modify -> POST
    // 수정 처리 완료 이후 방금 수정한 글의 상세보기 요청이 다시 들어올 수 있도록 작성하세요.
    
    
    //삭제는 알아서 작성해 주세요. (삭제 클릭하면 해당 글이 삭제될 수 있도록)
	
	
	//상세보기,수정페이지 공통로직 메서드화
	private void retrieve(int boardNo,Model model) {
		model.addAttribute("article",service.retrieve(boardNo));
	}
	
	
	
	
	
	
}
